name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python-lint
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Set up venv cache
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ steps.setup-python-lint.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Install Dependencies into venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install poetry
          poetry install --no-interaction
      - name: Check formatting
        run: |
          source venv/bin/activate
          poetry run black --check .
  test:
    name: Test
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - 'ubuntu-latest'
          - 'windows-latest'
        python:
#          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
#          - 'pypy-3.6'
          - 'pypy-3.7'
          - 'pypy-3.8'
        exclude:
          - os: 'windows-latest'
            python: 'pypy-3.6'
          - os: 'windows-latest'
            python: 'pypy-3.7'
          - os: 'windows-latest'
            python: 'pypy-3.8'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python-test
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Set up venv cache
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ steps.setup-python-test.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      - name: Windows - Install Dependencies into venv
        if: steps.cache-venv.outputs.cache-hit != 'true' && runner.os == 'Windows'
        run: |
          python -m venv venv
          venv/Scripts/activate.ps1
          pip install poetry
          poetry install --no-interaction -vvv
      - name: Linux/macOS - Install Dependencies into venv
        if: steps.cache-venv.outputs.cache-hit != 'true' && runner.os != 'Windows'
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install poetry
          poetry install --no-interaction -vvv
      - name: Windows - Run tests
        if: runner.os == 'Windows'
        run: |
          venv/Scripts/activate.ps1
          poetry run pytest
      - name: Linux/macOS - Run tests
        if: runner.os != 'Windows'
        run: |
          source venv/bin/activate
          poetry run pytest